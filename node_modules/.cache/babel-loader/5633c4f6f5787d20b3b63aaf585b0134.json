{"ast":null,"code":"var _jsxFileName = \"/Users/stephenpritchard/Web Development/my-portfolio-site/src/Components/Projects.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createRef } from 'react';\nimport { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projArray = [{\n  name: \"Invoice Parser\",\n  id: \"invoiceParser\",\n  image: \"project-img/invoice_parser.png\",\n  description: \"An automated invoice submission app. Invoices are uploaded via drag 'n' drop to an AWS Textract endpoint which reads the document. The returned data is checked against the client's purchase orders on their BrightPearl CRM endpoint, and any matches are saved to a MongodDB collection.\",\n  github1: \"https://github.com/stevopritchard/Invoice-Parser-client\",\n  github2: \"https://github.com/stevopritchard/Invoice-Parser-server\",\n  url: \"https://radiant-crag-07404.herokuapp.com/\"\n}, {\n  name: \"Blockchain app\",\n  id: \"blockchain\",\n  image: \"project-img/blockchain.png\",\n  description: \"I built this as a submission for a project challenge on the Complete Web Developer community. The only third party library used for this project was Material Kit for styling. I took advantage of ES6 class constructors, which I had previously only used in building class-based React components.\",\n  github1: \"https://github.com/stevopritchard/Challenge-1-Blockchain\",\n  github2: null,\n  url: \"https://stevopritchard.github.io/Challenge-1-Blockchain/\"\n}, {\n  name: 'Â¡Conjugado!',\n  id: 'conjugado',\n  image: \"project-img/conjugado.png\",\n  description: \"This project was an opportunity to build something that would be useful to my Spanish studies. Verbs are found via the search bar, and each verb offers a full conjugation table and can be selected as a 'favourite' so that it appears onscreen when you next login. There is also an accompanying practise section that allows you to test your knowledge against a chosen combination of tenses.\",\n  github1: \"https://github.com/stevopritchard/conjugation_frontend\",\n  github2: \"https://github.com/stevopritchard/conjugation_backend\",\n  url: \"https://conjugado-frontend.herokuapp.com/\"\n}, {\n  name: 'Weather app',\n  id: 'weather',\n  image: \"project-img/weather.png\",\n  description: \"A application that I built while studying the Complete Node Developer course. It utilises Mapbox and Weatherstack REST APIs to deliver a location-accurate weather forecast.\",\n  github1: \"https://github.com/stevopritchard/node_weather_website\",\n  github2: null,\n  url: \"https://pritchard-node-weather-app.herokuapp.com/\"\n}, {\n  name: 'Woofers',\n  id: 'woofers',\n  image: \"project-img/woofers.png\",\n  description: \"My first project for a client. A single-page React app that uses React-Router-DOM and the react-carousel and react-image-lightbox packages and Google's Maps Embed API.\",\n  github1: \"https://github.com/stevopritchard/woofersv2\",\n  github2: null,\n  url: \"https://www.woofersbristol.co.uk/\"\n}, {\n  name: 'Smart Brain',\n  id: 'smartBrain',\n  image: \"project-img/smartbrain.png\",\n  description: \"The final project of the Complete Web Developer course brought together a lot of aspects that I had previously covered as separate concepts, including using third-party libraries with Node.js, REST operations and setting up an SQL database.\",\n  github1: \"https://github.com/stevopritchard/facerecognitionbrain\",\n  github2: \"https://github.com/stevopritchard/SmartBrain-API\",\n  url: \"https://smart-brain--front-end.herokuapp.com/\"\n}];\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    height: '100%'\n  },\n  projects: {\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyItems: 'center'\n  },\n  projectItem: {\n    paddingTop: '70px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center'\n  },\n  projectPaper: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    margin: 10,\n    backgroundImage: props => `url(${props.image})`,\n    '&:hover': {\n      backgroundImage: props => `linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ), transition: 0.5s, url(\"${props.image}\")`\n    },\n    backgroundSize: 'cover',\n    height: '42.18vw',\n    width: '75vw'\n  },\n  magicButton: {\n    transition: '0.5s'\n  }\n});\n\nconst GitHubPopover = props => {\n  const {\n    project\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      href: project.github1,\n      style: {\n        margin: 5\n      },\n      children: \"Front-End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      href: project.github2,\n      style: {\n        margin: 5\n      },\n      children: \"Back-End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GitHubPopover;\n\nfunction ProjectCard(props) {\n  _s();\n\n  const {\n    project\n  } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'GitHub' : undefined;\n  const styleProps = {\n    project\n  };\n  const classes = useStyles(styleProps.project);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.projectItem,\n    id: project.id,\n    ref: props.menuRef,\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      style: {\n        fontWeight: 400\n      },\n      align: \"center\",\n      gutterBottom: true,\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.projectPaper\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingBottom: '3vh',\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          \"aria-describedby\": id,\n          variant: \"outlined\",\n          disableElevation: true,\n          startIcon: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 40\n          }, this),\n          href: project.github2 !== null ? null : project.github1,\n          onClick: project.github2 !== null ? handleClick : null,\n          children: \"GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          disableElevation: true,\n          startIcon: /*#__PURE__*/_jsxDEV(LaunchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 40\n          }, this),\n          href: project.url,\n          children: \"Launch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        id: id,\n        open: open,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'center',\n          horizontal: 'center'\n        },\n        transformOrigin: {\n          vertical: 'center',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(GitHubPopover, {\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"justify\",\n      gutterBottom: true,\n      children: project.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectCard, \"rR4YbuwDsNH7kIPxRuzEnRkbEdw=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ProjectCard;\nexport default function Projects(props) {\n  _s2();\n\n  const classes = useStyles();\n\n  if (props.projRef.current.length !== projArray.length) {\n    props.projRef.current = Array(projArray.length).fill().map((_, i) => props.projRef.current[i] || /*#__PURE__*/createRef());\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.projects,\n    children: projArray.map((project, i) => {\n      return /*#__PURE__*/_jsxDEV(ProjectCard, {\n        menuRef: props.projRef.current[i],\n        project: project\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Projects, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Projects;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GitHubPopover\");\n$RefreshReg$(_c2, \"ProjectCard\");\n$RefreshReg$(_c3, \"Projects\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/my-portfolio-site/src/Components/Projects.js"],"names":["React","createRef","useState","Container","Box","Paper","Typography","Button","Popover","GitHubIcon","LaunchIcon","Divider","makeStyles","projArray","name","id","image","description","github1","github2","url","useStyles","main","display","flexDirection","width","height","projects","flex","justifyItems","projectItem","paddingTop","alignContent","projectPaper","justifyContent","alignItems","margin","backgroundImage","props","backgroundSize","magicButton","transition","GitHubPopover","project","ProjectCard","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","undefined","styleProps","classes","menuRef","fontWeight","paddingBottom","vertical","horizontal","Projects","projRef","current","length","Array","fill","map","_","i"],"mappings":"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","sourcesContent":["import React, { createRef } from 'react';\nimport { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Divider from '@material-ui/core/Divider';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst projArray = [\n    {\n        name: \"Invoice Parser\", \n        id:\"invoiceParser\", \n        image:\"project-img/invoice_parser.png\",\n        description:\"An automated invoice submission app. Invoices are uploaded via drag 'n' drop to an AWS Textract endpoint which reads the document. The returned data is checked against the client's purchase orders on their BrightPearl CRM endpoint, and any matches are saved to a MongodDB collection.\",\n        github1:\"https://github.com/stevopritchard/Invoice-Parser-client\",\n        github2: \"https://github.com/stevopritchard/Invoice-Parser-server\",\n        url:\"https://radiant-crag-07404.herokuapp.com/\"\n    }, \n    {\n        name: \"Blockchain app\", \n        id:\"blockchain\", \n        image:\"project-img/blockchain.png\",\n        description:\"I built this as a submission for a project challenge on the Complete Web Developer community. The only third party library used for this project was Material Kit for styling. I took advantage of ES6 class constructors, which I had previously only used in building class-based React components.\",\n        github1:\"https://github.com/stevopritchard/Challenge-1-Blockchain\",\n        github2: null,\n        url:\"https://stevopritchard.github.io/Challenge-1-Blockchain/\"\n    }, \n    {\n        name: 'Â¡Conjugado!', \n        id:'conjugado', \n        image:\"project-img/conjugado.png\",\n        description:\"This project was an opportunity to build something that would be useful to my Spanish studies. Verbs are found via the search bar, and each verb offers a full conjugation table and can be selected as a 'favourite' so that it appears onscreen when you next login. There is also an accompanying practise section that allows you to test your knowledge against a chosen combination of tenses.\",\n        github1:\"https://github.com/stevopritchard/conjugation_frontend\",\n        github2: \"https://github.com/stevopritchard/conjugation_backend\",\n        url:\"https://conjugado-frontend.herokuapp.com/\"\n    }, \n    {\n        name:'Weather app', \n        id: 'weather', \n        image:\"project-img/weather.png\",\n        description:\"A application that I built while studying the Complete Node Developer course. It utilises Mapbox and Weatherstack REST APIs to deliver a location-accurate weather forecast.\",\n        github1:\"https://github.com/stevopritchard/node_weather_website\",\n        github2: null,\n        url:\"https://pritchard-node-weather-app.herokuapp.com/\"\n    }, \n    {\n        name:'Woofers', \n        id:'woofers', \n        image:\"project-img/woofers.png\",\n        description: \"My first project for a client. A single-page React app that uses React-Router-DOM and the react-carousel and react-image-lightbox packages and Google's Maps Embed API.\",\n        github1:\"https://github.com/stevopritchard/woofersv2\",\n        github2: null,\n        url:\"https://www.woofersbristol.co.uk/\"\n    }, \n    {\n        name:'Smart Brain', \n        id:'smartBrain', \n        image:\"project-img/smartbrain.png\",\n        description: \"The final project of the Complete Web Developer course brought together a lot of aspects that I had previously covered as separate concepts, including using third-party libraries with Node.js, REST operations and setting up an SQL database.\",\n        github1:\"https://github.com/stevopritchard/facerecognitionbrain\",\n        github2: \"https://github.com/stevopritchard/SmartBrain-API\",\n        url:\"https://smart-brain--front-end.herokuapp.com/\"\n    }\n]\n\n\nconst useStyles = makeStyles({\n    main:{\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n        height: '100%',\n    },\n    projects: {\n        flex: '1 1 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyItems: 'center',\n    },\n    projectItem:{\n        paddingTop: '70px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n\n    },\n    projectPaper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n        margin: 10,\n        backgroundImage: props => `url(${props.image})`,\n        '&:hover':{\n            backgroundImage: props => `linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ), transition: 0.5s, url(\"${props.image}\")`,\n        },\n        backgroundSize: 'cover',\n        height: '42.18vw',\n        width: '75vw',\n    },\n    magicButton: {\n        transition: '0.5s'\n    }\n})\n\nconst GitHubPopover = (props) => {\n    const { project } = props;\n    \n    return (\n        <Box display='flex' flexDirection=\"row\">\n            <Button \n                variant='outlined'\n                href={project.github1}\n                style={{margin: 5}}\n            >Front-End</Button>\n            <Button \n                variant='outlined'\n                href={project.github2}\n                style={{margin: 5}}\n            >Back-End</Button>\n        </Box>\n    )\n}\n\nfunction ProjectCard(props) {\n    const { project } = props;\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n    const open = Boolean(anchorEl);\n    const id = open ? 'GitHub' : undefined\n\n    const styleProps = {\n       project\n    }\n\n    const classes = useStyles(styleProps.project)\n\n    return (\n        <Container \n            className={classes.projectItem}\n            id={project.id}\n            ref={props.menuRef}\n        >\n            <Divider/>\n            <Typography variant=\"h3\" style={{fontWeight: 400}} align='center' gutterBottom>\n                {project.name}\n            </Typography>\n            <Paper className={classes.projectPaper}>\n            </Paper>\n\n            <Container style={{paddingBottom: '3vh', display: 'flex', justifyContent: 'space-around'}}>\n                    <Box>\n                        <Button\n                            aria-describedby={id}\n                            variant='outlined'\n                            disableElevation\n                            startIcon={<GitHubIcon/>}\n                            href={\n                                project.github2 !== null \n                                ? \n                                null\n                                : \n                                project.github1\n                            }\n                            onClick={\n                                project.github2 !== null\n                                ?\n                                handleClick\n                                :\n                                null\n                            }\n                        >GitHub</Button>\n                    </Box>\n                    <Box>\n                        <Button\n                            variant='outlined'\n                            disableElevation\n                            startIcon={<LaunchIcon/>}\n                            href={project.url}\n                        >Launch</Button>\n                    </Box>\n                    <Popover \n                        id={id}\n                        open={open}\n                        anchorEl={anchorEl}\n                        onClose={handleClose}\n                        anchorOrigin={{ vertical: 'center', horizontal: 'center'}}\n                        transformOrigin={{vertical: 'center', horizontal: 'center'}}\n                    >\n                        <GitHubPopover \n                            project={project} \n                        />\n                    </Popover>\n                </Container>\n            <Typography variant=\"body1\" align='justify' gutterBottom>\n                {project.description}\n            </Typography>\n        </Container>\n    )\n}\n\nexport default function Projects(props) {\n    const classes = useStyles();\n   \n    if(props.projRef.current.length !== projArray.length) {\n        props.projRef.current = Array(projArray.length).fill().map((_, i) => props.projRef.current[i] || createRef())\n    }\n\n    return (       \n        <Container className={classes.projects}>\n            {projArray.map((project, i) => {\n                return (\n                    <ProjectCard \n                        key={i} \n                        menuRef={props.projRef.current[i]}\n                        project={project}\n                    />\n                )\n            })}\n        </Container>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}